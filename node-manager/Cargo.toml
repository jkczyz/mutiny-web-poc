[package]
name = "node-manager"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib"]

[dependencies]
cfg-if = "1.0.0"
wasm-bindgen = "0.2.83"
bip39 = { version = "1.0.1" }
bip32 = "0.4.0"
secp256k1 = "0.24.0"
bitcoin = "0.29.1"
bdk = { git = "https://github.com/benthecarman/bdk", branch = "update-esplora", default-features = false, features = ["keys-bip39", "esplora", "use-esplora-reqwest"] }
getrandom = { version = "0.2", features = ["js"] }
serde = { version = "^1.0", features = ["derive"] }
serde_json = { version = "^1.0" }
gloo-storage = "0.2.2"
uuid = { version = "1.1.2", features = ["v4"] }
lightning = { version = "0.0.112", features = ["max_level_trace"] }
lightning-block-sync = "0.0.112"
instant = { version = "0.1", features = [ "wasm-bindgen" ] }

base64 = "0.13.0"
pbkdf2 = "0.11"
aes-gcm = "0.10.1"
rand_core = { version = "0.6", features = ["std"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }
wasm-bindgen-futures = "0.4.33"
wasm-logger = "0.2.0"
log = "0.4.17"
gloo-net = "0.2.4"
futures = "0.3.25"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"
web-sys = { version = "0.3.60", features = ["console"] }

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"

[features]
# default = ["console_error_panic_hook" ,"wee_alloc"]
default = ["console_error_panic_hook"]

[package.metadata.wasm-pack.profile.release]
wasm-opt = false
